diff --git a/dist/utils/instantiate.js b/dist/utils/instantiate.js
index 33cdff152e8b23d6853eb475097bda8c02712e01..418f57072c9c0ebf3778c8a9a50d379728128e5f 100644
--- a/dist/utils/instantiate.js
+++ b/dist/utils/instantiate.js
@@ -1,15 +1,17 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.instantiate = void 0;
-const fs_1 = require("fs");
+"use strict"
+Object.defineProperty(exports, "__esModule", { value: true })
+exports.instantiate = void 0
+const fs_1 = require("fs")
 /** Circuit builder, kinda like `ejs.render`. **Be very careful when editing this file.** */
 const makeCircuit = (config) => `// auto-generated by circomkit
 pragma circom ${config.version};
 
 include "../${config.file}.circom";
 
-component main${config.pubs.length === 0 ? '' : ' {public[' + config.pubs.join(', ') + ']}'} = ${config.template}(${config.params.join(', ')});
-`;
+component main${config.pubs.length === 0 ? "" : " {public[" + config.pubs.join(", ") + "]}"} = ${
+    config.template
+}(${config.params.join(", ")});
+`
 /**
  * Programmatically generate the `main` component of a circuit
  * @param name name of the circuit to be generated
@@ -18,31 +20,32 @@ component main${config.pubs.length === 0 ? '' : ' {public[' + config.pubs.join('
  */
 function instantiate(name, circuitConfig) {
     // directory to output the file
-    const directory = circuitConfig.dir || 'test';
+    const directory = circuitConfig.dir || "test"
     // add "../" to the filename in include, one for each "/" in directory name
     // if none, the prefix becomes empty string
-    const filePrefixMatches = directory.match(/\//g);
-    let file = circuitConfig.file;
+    const filePrefixMatches = directory.match(/\//g)
+    let file = circuitConfig.file
     if (filePrefixMatches !== null) {
-        file = '../'.repeat(filePrefixMatches.length) + file;
+        file = "../".repeat(filePrefixMatches.length) + file
     }
     const circuitCode = makeCircuit({
         file: file,
         template: circuitConfig.template,
-        version: circuitConfig.version || '2.0.0',
+        version: circuitConfig.version || "2.0.0",
         dir: directory,
         pubs: circuitConfig.pubs || [],
-        params: circuitConfig.params || [],
-    });
-    const targetDir = `./circuits/${directory}`;
+        params: circuitConfig.params || []
+    })
+    const targetDir = `./circom/${directory}`
     if (!(0, fs_1.existsSync)(targetDir)) {
-        (0, fs_1.mkdirSync)(targetDir, {
-            recursive: true,
-        });
+        ;(0, fs_1.mkdirSync)(targetDir, {
+            recursive: true
+        })
     }
-    const targetPath = `${targetDir}/${name}.circom`;
-    (0, fs_1.writeFileSync)(targetPath, circuitCode);
-    return targetPath;
+    const targetPath = `${targetDir}/${name}.circom`
+    ;(0, fs_1.writeFileSync)(targetPath, circuitCode)
+    return targetPath
 }
-exports.instantiate = instantiate;
+exports.instantiate = instantiate
 //# sourceMappingURL=instantiate.js.map
+
